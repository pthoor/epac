name: EPAC AVNM Deployment

on:
  pull_request:
    branches:
      - main
    types: [closed]
    paths:
      - 'avnm/**'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  detect-tenants:
    name: Detect changed tenants
    runs-on: ubuntu-latest
    outputs:
      tenants: ${{ steps.set-matrix.outputs.tenantMatrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Ensure jq is available
        run: sudo apt-get update && sudo apt-get install -y jq

      - id: set-matrix
        run: |
          echo "Detecting changed tenants..."

          changed=$(git diff --name-only ${{ github.event.before || 'HEAD~1' }} ${{ github.sha }} | grep '^avnm/' | cut -d '/' -f2 | sort -u | uniq)

          if [[ -z "$changed" ]]; then
            echo "No changes detected, using all tenants under avnm/"
            changed=$(find avnm -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)
          fi

          echo "Changed tenants:"
          echo "$changed"

          matrix=$(echo "$changed" | jq -R . | jq -cs .)
          echo "tenantMatrix={\"tenant\": $matrix}" >> $GITHUB_OUTPUT

  plan:
    needs: detect-tenants
    strategy:
      matrix: ${{ fromJson(needs.detect-tenants.outputs.tenants) }}
    uses: ./.github/workflows/plan.yml
    with:
      pacEnvironmentSelector: env-${{ matrix.tenant }}
      planGitHubEnvironment: env-${{ matrix.tenant }}-epac-plan
      PAC_OUTPUT_FOLDER: ./Output
      PAC_DEFINITIONS_FOLDER: ./avnm/${{ matrix.tenant }}
    secrets: inherit

  deploy:
    needs: 
      [detect-tenants, plan]
    strategy:
      matrix: ${{ fromJson(needs.detect-tenants.outputs.tenants) }}
    runs-on: ubuntu-latest
    environment: env-${{ matrix.tenant }}-epac-deploy
    steps:
      - name: Debug tenant matrix
        env:
          tenant: ${{ matrix.tenant }}
        run: |
          echo "Matrix tenant: $tenant"

      - uses: actions/checkout@v4

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: plans-env-${{ matrix.tenant }}
          path: ./Output

      - name: Install Required Modules
        uses: Azure/powershell@v2
        with:
          inlineScript: |
            Install-Module EnterprisePolicyAsCode -Force
          azPSVersion: "latest"

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          enable-AzPSSession: true
          allow-no-subscriptions: true

      - name: Check Plan File
        id: check-plan
        run: |
          if [ -f "./Output/policy-plan.json" ]; then
            echo "deployPolicyChanges=yes" >> $GITHUB_OUTPUT
          else
            echo "No plan file found. Skipping deploy."
          fi

      - name: Deploy Policy
        if: steps.check-plan.outputs.deployPolicyChanges == 'yes'
        uses: azure/powershell@v2
        with:
          inlineScript: |
            Deploy-PolicyPlan -PacEnvironmentSelector env-${{ matrix.tenant }} -InformationAction Continue
          azPSVersion: "latest"

